// Enhanced Achievement System for Rural Women's Digital Education
export const ACHIEVEMENT_CATEGORIES = {
  LEARNING: 'learning',
  CONSISTENCY: 'consistency', 
  COMMUNICATION: 'communication',
  PROGRESS: 'progress',
  COMMUNITY: 'community',
  SPECIAL: 'special'
};

export const ACHIEVEMENT_RARITIES = {
  COMMON: 'common',
  RARE: 'rare',
  EPIC: 'epic',
  LEGENDARY: 'legendary'
};

// Culturally relevant achievements for rural Indian women
export const ENHANCED_ACHIEVEMENTS = [
  // Learning Achievements
  {
    id: 'first_lesson',
    title: 'ЁЯМ╕ рд╢реБрд░реБрдЖрдд рдЪреИрдВрдкрд┐рдпрди',
    titleEnglish: 'Shuruaat Champion',
    description: 'рдкрд╣рд▓рд╛ рдкрд╛рда рдкреВрд░рд╛ рдХрд┐рдпрд╛',
    descriptionEnglish: 'Completed first lesson',
    category: ACHIEVEMENT_CATEGORIES.LEARNING,
    rarity: ACHIEVEMENT_RARITIES.COMMON,
    icon: 'ЁЯМ╕',
    color: '#FF69B4',
    requirement: { type: 'lessons_completed', count: 1 },
    motivationalMessage: 'рд╢рд╛я┐╜я┐╜я┐╜рд╛рд╢! рдЖрдкрдиреЗ рдЕрдкрдиреА рд╕реАрдЦрдиреЗ рдХреА рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░ рджреА рд╣реИред рдЖрдЧреЗ рдмрдврд╝рддреЗ рд░рд╣реЗрдВ!'
  },
  {
    id: 'three_lessons',
    title: 'ЁЯМЯ рд╕реАрдЦрдиреЗ рд╡рд╛рд▓реА рдмрд╣рди',
    titleEnglish: 'Seekhne Wali Behen',
    description: '3 рдкрд╛рда рдкреВрд░реЗ рдХрд┐рдП',
    descriptionEnglish: 'Completed 3 lessons',
    category: ACHIEVEMENT_CATEGORIES.LEARNING,
    rarity: ACHIEVEMENT_RARITIES.COMMON,
    icon: 'ЁЯМЯ',
    color: '#FFD700',
    requirement: { type: 'lessons_completed', count: 3 },
    motivationalMessage: 'рд╡рд╛рд╣! рдЖрдк рддреЛ рд╕рдЪ рдореЗрдВ рд╕реАрдЦрдиреЗ рд╡рд╛рд▓реА рдмрд╣рди рд╣реИрдВред рдРрд╕реЗ рд╣реА рдЖрдЧреЗ рдмрдврд╝реЗрдВ!'
  },
  {
    id: 'ten_lessons',
    title: 'ЁЯУЪ рдЬреНрдЮрд╛рди рдХреА рдкреНрдпрд╛рд╕реА',
    titleEnglish: 'Gyan Ki Pyaasi',
    description: '10 рдкрд╛рда рдкреВрд░реЗ рдХрд┐рдП',
    descriptionEnglish: 'Completed 10 lessons',
    category: ACHIEVEMENT_CATEGORIES.LEARNING,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯУЪ',
    color: '#4169E1',
    requirement: { type: 'lessons_completed', count: 10 },
    motivationalMessage: 'рдЖрдк рддреЛ рдЬреНрдЮрд╛рди рдХреА рд╕рдЪреНрдЪреА рдкреНрдпрд╛я┐╜я┐╜реА рд╣реИрдВ! рдЖрдкрдХреА рдореЗрд╣рдирдд рд╕рд░рд╛рд╣рдиреАрдп рд╣реИред'
  },
  {
    id: 'knowledge_queen',
    title: 'ЁЯСС рдЬреНрдЮрд╛рди рд░рд╛рдиреА',
    titleEnglish: 'Gyan Rani',
    description: 'рд╕рднреА рдореБрдЦреНрдп рд╡рд┐рд╖рдп рдкреВрд░реЗ рдХрд┐рдП',
    descriptionEnglish: 'Completed all main subjects',
    category: ACHIEVEMENT_CATEGORIES.LEARNING,
    rarity: ACHIEVEMENT_RARITIES.LEGENDARY,
    icon: 'ЁЯСС',
    color: '#8A2BE2',
    requirement: { type: 'modules_completed', count: 5 },
    motivationalMessage: 'рдЖрдк рд╕рдЪ рдореЗрдВ рдЬреНрдЮрд╛рди рдХреА рд░рд╛рдиреА рд╣реИрдВ! рдкреВрд░реЗ рд╕рдореБрджрд╛рдп рдХреЗ рд▓рд┐рдП рдкреНрд░реЗрд░рдгрд╛ рд╣реИрдВред'
  },

  // Consistency Achievements
  {
    id: 'three_day_streak',
    title: 'ЁЯФе рд▓рдЧрд╛рддрд╛рд░ рд╕реАрдЦрдиреЗ рд╡рд╛рд▓реА',
    titleEnglish: 'Lagatar Seekhne Wali',
    description: '3 рджрд┐рди рд▓рдЧрд╛рддрд╛рд░ рд╕реАрдЦрд╛',
    descriptionEnglish: '3 day learning streak',
    category: ACHIEVEMENT_CATEGORIES.CONSISTENCY,
    rarity: ACHIEVEMENT_RARITIES.COMMON,
    icon: 'ЁЯФе',
    color: '#FF4500',
    requirement: { type: 'streak_days', count: 3 },
    motivationalMessage: 'рдмрд╣реБрдд рдмрдврд╝рд┐рдпрд╛! рд▓рдЧрд╛рддрд╛я┐╜я┐╜ рд╕реАрдЦрдирд╛ рд╣реА рд╕рдлрд▓рддрд╛ рдХреА рдЪрд╛рдмреА рд╣реИред'
  },
  {
    id: 'seven_day_streak',
    title: 'ЁЯкФ рджреАрджреА рдХреА рд░реЛрд╢рдиреА',
    titleEnglish: 'Didi Ki Roshni',
    description: '7 рджрд┐рди рд▓рдЧрд╛рддрд╛рд░ рд╕реАрдЦрд╛',
    descriptionEnglish: '7 day learning streak',
    category: ACHIEVEMENT_CATEGORIES.CONSISTENCY,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯкФ',
    color: '#FF8C00',
    requirement: { type: 'streak_days', count: 7 },
    motivationalMessage: 'рдЖрдк рддреЛ рджреАрджреА рдХреА рд╕рдЪреНрдЪреА рд░реЛрд╢рдиреА рд╣реИрдВ! рдЖрдкрдХрд╛ рдЬреБрдиреВрди рджреЗрдЦрдиреЗ рд▓рд╛рдпрдХ рд╣реИред'
  },
  {
    id: 'thirty_day_streak',
    title: 'ЁЯМЕ рд╕реВрд░реНрдп рдХреА рддрд░рд╣ рдирд┐рд░рдВрддрд░',
    titleEnglish: 'Surya Ki Tarah Nirantar',
    description: '30 рджрд┐рди рд▓рдЧрд╛рддрд╛рд░ рд╕реАрдЦрд╛',
    descriptionEnglish: '30 day learning streak',
    category: ACHIEVEMENT_CATEGORIES.CONSISTENCY,
    rarity: ACHIEVEMENT_RARITIES.EPIC,
    icon: 'ЁЯМЕ',
    color: '#FF6347',
    requirement: { type: 'streak_days', count: 30 },
    motivationalMessage: 'рд╡рд╛рд╣! рдЖрдк рддреЛ рд╕реВрд░реНрдп рдХреА рддрд░рд╣ рдирд┐рд░рдВрддрд░ рдЪрдордХ рд░рд╣реА рд╣реИрдВред рдЕрджреНрднреБрдд!'
  },

  // Communication Achievements
  {
    id: 'first_call',
    title: 'ЁЯУЮ рдкрд╣рд▓реА рдмрд╛рддрдЪреАрдд',
    titleEnglish: 'Pehli Baatcheet',
    description: 'рджреАрджреА рд╕реЗ рдкрд╣рд▓реА рдмрд╛рд░ рдмрд╛рдд рдХреА',
    descriptionEnglish: 'First conversation with Didi',
    category: ACHIEVEMENT_CATEGORIES.COMMUNICATION,
    rarity: ACHIEVEMENT_RARITIES.COMMON,
    icon: 'ЁЯУЮ',
    color: '#32CD32',
    requirement: { type: 'calls_completed', count: 1 },
    motivationalMessage: 'рд╢рд╛рдмрд╛рд╢! рдЖрдкрдиреЗ рд╣рд┐рдореНрдордд рджрд┐рдЦрд╛рдИ рдФрд░ рджреАрджреА рд╕реЗ рдмрд╛рдд рдХреАред'
  },
  {
    id: 'confident_speaker',
    title: 'ЁЯЧгя╕П рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рд╕реЗ рднрд░реА',
    titleEnglish: 'Aatmvishwas Se Bhari',
    description: '10 рдмрд╛рд░ рджреАрджреА рд╕реЗ рдмрд╛рдд рдХреА',
    descriptionEnglish: '10 conversations with Didi',
    category: ACHIEVEMENT_CATEGORIES.COMMUNICATION,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯЧгя╕П',
    color: '#20B2AA',
    requirement: { type: 'calls_completed', count: 10 },
    motivationalMessage: 'рдЖрдк рддреЛ рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рд╕реЗ рднрд░реА рд╣реБрдИ рд╣реИрдВ! рдмрд╛рдд рдХрд░рдиреЗ рдореЗрдВ рдорд╛рд╣рд┐рд░ рд╣реЛ рдЧрдИрдВред'
  },
  {
    id: 'voice_champion',
    title: 'ЁЯОд рдЖрд╡рд╛рдЬрд╝ рдХреА рдЪреИрдВрдкрд┐рдпрди',
    titleEnglish: 'Awaaz Ki Champion',
    description: '50 рдмрд╛рд░ рджреАрджреА рд╕реЗ рдмрд╛рдд рдХреА',
    descriptionEnglish: '50 conversations with Didi',
    category: ACHIEVEMENT_CATEGORIES.COMMUNICATION,
    rarity: ACHIEVEMENT_RARITIES.EPIC,
    icon: 'ЁЯОд',
    color: '#9370DB',
    requirement: { type: 'calls_completed', count: 50 },
    motivationalMessage: 'рдЖрдк рддреЛ рдЖрд╡рд╛рдЬрд╝ рдХреА рд╕рдЪреНрдЪреА рдЪреИрдВрдкрд┐рдпрди рд╣реИрдВ! рдЖрдкрдХреА рдмрд╛рддрдЪреАрдд рдХрдорд╛рд▓ рдХреА рд╣реИред'
  },

  // Progress Achievements
  {
    id: 'quick_learner',
    title: 'тЪб рддреЗрдЬрд╝ рд╕реАрдЦрдиреЗ рд╡рд╛рд▓реА',
    titleEnglish: 'Tez Seekhne Wali',
    description: '1 рджрд┐рди рдореЗрдВ 3 рдкрд╛рда рдкреВрд░реЗ рдХрд┐рдП',
    descriptionEnglish: 'Completed 3 lessons in 1 day',
    category: ACHIEVEMENT_CATEGORIES.PROGRESS,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'тЪб',
    color: '#FFD700',
    requirement: { type: 'lessons_per_day', count: 3 },
    motivationalMessage: 'рд╡рд╛рд╣! рдЖрдк рддреЛ рдмрд╣реБрдд рддреЗрдЬрд╝ рд╕реАрдЦрддреА рд╣реИрдВред рд╢рд╛я┐╜я┐╜я┐╜рджрд╛рд░!'
  },
  {
    id: 'perfect_score',
    title: 'ЁЯТп рдкрд░рдлреЗрдХреНрдЯ рд╕реНрдХреЛрд░',
    titleEnglish: 'Perfect Score',
    description: 'рдХрд┐рд╕реА рдкрд╛рда рдореЗрдВ 100% рдЕрдВрдХ рдкрд╛рдП',
    descriptionEnglish: 'Got 100% in a lesson',
    category: ACHIEVEMENT_CATEGORIES.PROGRESS,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯТп',
    color: '#FF1493',
    requirement: { type: 'perfect_score', count: 1 },
    motivationalMessage: 'рдкрд░рдлреЗрдХреНрдЯ! рдЖрдкрдиреЗ 100% рдЕрдВрдХ рдкрд╛рдП рд╣реИрдВред рдмреЗрд╣рддрд░реАрди!'
  },

  // Community Achievements
  {
    id: 'helpful_sister',
    title: 'ЁЯдЭ рдорджрджрдЧрд╛рд░ рдмрд╣рди',
    titleEnglish: 'Madadgar Behen',
    description: '5 рд▓реЛрдЧреЛрдВ рдХреА рдорджрдж рдХреА',
    descriptionEnglish: 'Helped 5 people',
    category: ACHIEVEMENT_CATEGORIES.COMMUNITY,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯдЭ',
    color: '#FF69B4',
    requirement: { type: 'people_helped', count: 5 },
    motivationalMessage: 'рдЖрдк рддреЛ рд╕рдЪреНрдЪреА рдорджрджрдЧрд╛рд░ рдмрд╣рди рд╣реИрдВ! рджреВрд╕рд░реЛрдВ рдХреА рдорджрдж рдХрд░рдирд╛ рдмрд╣реБрдд рдЕрдЪреНрдЫреА рдмрд╛рдд рд╣реИред'
  },
  {
    id: 'story_teller',
    title: 'ЁЯУЦ рдХрд╣рд╛рдиреА рд╕реБрдирд╛рдиреЗ рд╡рд╛рд▓реА',
    titleEnglish: 'Kahani Sunane Wali',
    description: '3 рд╕рдлрд▓рддрд╛ рдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ рд╕рд╛рдЭрд╛ рдХреАрдВ',
    descriptionEnglish: 'Shared 3 success stories',
    category: ACHIEVEMENT_CATEGORIES.COMMUNITY,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯУЦ',
    color: '#4169E1',
    requirement: { type: 'stories_shared', count: 3 },
    motivationalMessage: 'рдЖрдкрдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ рджреВрд╕рд░реЛрдВ рдХреЛ рдкреНрд░реЗрд░рдгрд╛ рджреЗрддреА рд╣реИрдВред рдмрд╣реБрдд рдЦреВрдм!'
  },

  // Special Achievements
  {
    id: 'early_bird',
    title: 'ЁЯМЕ рд╕реБрдмрд╣ рдХреА рдЪрд┐рдбрд╝рд┐рдпрд╛',
    titleEnglish: 'Subah Ki Chidiya',
    description: 'рд╕реБрдмрд╣ 6 рдмрдЬреЗ рд╕реЗ рдкрд╣рд▓реЗ рд╕реАрдЦрд╛',
    descriptionEnglish: 'Learned before 6 AM',
    category: ACHIEVEMENT_CATEGORIES.SPECIAL,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯМЕ',
    color: '#FF8C00',
    requirement: { type: 'early_learning', count: 1 },
    motivationalMessage: 'рд╡рд╛рд╣! рдЖрдк рддреЛ рд╕реБрдмрд╣ рдХреА рдЪрд┐рдбрд╝рд┐рдпрд╛ рд╣реИрдВред рдЬрд▓реНрджреА рдЙрдардХрд░ рд╕реАрдЦрдирд╛ рдмрд╣реБрдд рдЕрдЪреНрдЫреА рдЖрджрдд рд╣реИред'
  },
  {
    id: 'night_owl',
    title: 'ЁЯМЩ рд░рд╛рдд рдХреА рд░рд╛рдиреА',
    titleEnglish: 'Raat Ki Rani',
    description: 'рд░рд╛рдд 10 рдмрдЬреЗ рдХреЗ рдмрд╛рдж рд╕реАрдЦрд╛',
    descriptionEnglish: 'Learned after 10 PM',
    category: ACHIEVEMENT_CATEGORIES.SPECIAL,
    rarity: ACHIEVEMENT_RARITIES.RARE,
    icon: 'ЁЯМЩ',
    color: '#4B0082',
    requirement: { type: 'night_learning', count: 1 },
    motivationalMessage: 'рдЖрдк рддреЛ рд░рд╛рдд рдХреА рд░рд╛рдиреА рд╣реИрдВ! рджреЗрд░ рд░рд╛рдд рднреА рд╕реАрдЦрдиреЗ рдХрд╛ рдЬреБрдиреВрди рджреЗрдЦрд┐рдПред'
  },
  {
    id: 'festival_learner',
    title: 'ЁЯОЙ рддреНрдпреЛрд╣рд╛рд░реА рд╕реАрдЦрдиреЗ рд╡рд╛рд▓реА',
    titleEnglish: 'Tyohari Seekhne Wali',
    description: 'рддреНрдпреЛрд╣рд╛рд░ рдХреЗ рджрд┐рди рднреА рд╕реАрдЦрд╛',
    descriptionEnglish: 'Learned on a festival day',
    category: ACHIEVEMENT_CATEGORIES.SPECIAL,
    rarity: ACHIEVEMENT_RARITIES.EPIC,
    icon: 'ЁЯОЙ',
    color: '#FF1493',
    requirement: { type: 'festival_learning', count: 1 },
    motivationalMessage: 'рддреНрдпреЛрд╣рд╛рд░ рдХреЗ рджрд┐рди рднреА рд╕реАрдЦрдирд╛! рдЖрдкрдХрд╛ рдЬреБрдиреВрди рд▓рд╛рдЬрд╡рд╛рдм рд╣реИред'
  },
  {
    id: 'didi_favorite',
    title: 'ЁЯТЦ рджреАрджреА рдХреА рд▓рд╛рдбрд▓реА',
    titleEnglish: 'Didi Ki Ladli',
    description: 'рджреАрджреА рдХреЗ рд╕рд╛рде 100 рдорд┐рдирдЯ рдмрд╛рдд рдХреА',
    descriptionEnglish: 'Talked with Didi for 100 minutes',
    category: ACHIEVEMENT_CATEGORIES.SPECIAL,
    rarity: ACHIEVEMENT_RARITIES.LEGENDARY,
    icon: 'ЁЯТЦ',
    color: '#FF1493',
    requirement: { type: 'total_talk_time', count: 100 },
    motivationalMessage: 'рдЖрдк рддреЛ рджреАрджреА рдХреА рд╕рдЪреНрдЪреА рд▓рд╛рдбрд▓реА рд╣реИрдВ! рдЗрддрдия┐╜я┐╜ рджреЗрд░ рдмрд╛рдд рдХрд░рдирд╛ рдкреНрдпрд╛рд░ рджрд┐рдЦрд╛рддрд╛ рд╣реИред'
  }
];

// Function to check if user has earned new achievements
export function checkNewAchievements(userStats, currentAchievements = []) {
  const newAchievements = [];
  
  for (const achievement of ENHANCED_ACHIEVEMENTS) {
    // Skip if already earned
    if (currentAchievements.includes(achievement.id)) {
      continue;
    }
    
    // Check if requirement is met
    if (isRequirementMet(achievement.requirement, userStats)) {
      newAchievements.push(achievement.id);
    }
  }
  
  return newAchievements;
}

function isRequirementMet(requirement, userStats) {
  switch (requirement.type) {
    case 'lessons_completed':
      return (userStats.lessonsCompleted || 0) >= requirement.count;
    
    case 'modules_completed':
      return (userStats.modulesCompleted?.length || 0) >= requirement.count;
    
    case 'streak_days':
      return (userStats.currentStreak || 0) >= requirement.count;
    
    case 'calls_completed':
      return (userStats.totalCalls || 0) >= requirement.count;
    
    case 'lessons_per_day':
      return (userStats.lessonsToday || 0) >= requirement.count;
    
    case 'perfect_score':
      return (userStats.perfectScores || 0) >= requirement.count;
    
    case 'people_helped':
      return (userStats.peopleHelped || 0) >= requirement.count;
    
    case 'stories_shared':
      return (userStats.storiesShared || 0) >= requirement.count;
    
    case 'early_learning':
      return userStats.hasEarlyLearning || false;
    
    case 'night_learning':
      return userStats.hasNightLearning || false;
    
    case 'festival_learning':
      return userStats.hasFestivalLearning || false;
    
    case 'total_talk_time':
      return (userStats.totalTalkTime || 0) >= requirement.count;
    
    default:
      return false;
  }
}

// Get achievement by ID
export function getAchievementById(achievementId) {
  return ENHANCED_ACHIEVEMENTS.find(a => a.id === achievementId);
}

// Get achievements by category
export function getAchievementsByCategory(category) {
  return ENHANCED_ACHIEVEMENTS.filter(a => a.category === category);
}

// Get achievements by rarity
export function getAchievementsByRarity(rarity) {
  return ENHANCED_ACHIEVEMENTS.filter(a => a.rarity === rarity);
}

// Calculate achievement progress
export function calculateAchievementProgress(userStats) {
  const totalAchievements = ENHANCED_ACHIEVEMENTS.length;
  const earnedAchievements = userStats.achievements?.length || 0;
  
  return {
    total: totalAchievements,
    earned: earnedAchievements,
    percentage: Math.round((earnedAchievements / totalAchievements) * 100),
    remaining: totalAchievements - earnedAchievements
  };
}

// Get next achievable achievements
export function getNextAchievements(userStats, currentAchievements = [], limit = 3) {
  const nextAchievements = [];
  
  for (const achievement of ENHANCED_ACHIEVEMENTS) {
    if (currentAchievements.includes(achievement.id)) {
      continue;
    }
    
    // Calculate how close user is to earning this achievement
    const progress = calculateRequirementProgress(achievement.requirement, userStats);
    
    if (progress.percentage > 0) {
      nextAchievements.push({
        ...achievement,
        progress
      });
    }
  }
  
  // Sort by progress percentage (closest to completion first)
  return nextAchievements
    .sort((a, b) => b.progress.percentage - a.progress.percentage)
    .slice(0, limit);
}

function calculateRequirementProgress(requirement, userStats) {
  let current = 0;
  let target = requirement.count;
  
  switch (requirement.type) {
    case 'lessons_completed':
      current = userStats.lessonsCompleted || 0;
      break;
    case 'modules_completed':
      current = userStats.modulesCompleted?.length || 0;
      break;
    case 'streak_days':
      current = userStats.currentStreak || 0;
      break;
    case 'calls_completed':
      current = userStats.totalCalls || 0;
      break;
    case 'total_talk_time':
      current = userStats.totalTalkTime || 0;
      break;
    default:
      return { current: 0, target: 1, percentage: 0 };
  }
  
  return {
    current: Math.min(current, target),
    target,
    percentage: Math.min(Math.round((current / target) * 100), 100)
  };
}